.bilboard{

  $type: white;
  @include linear-gradient( to bottom right, $brand-colour , adjust-hue( $brand-colour, 40deg ) );
  border-bottom: 1px solid fade-out( black, 0.95 );
  @include modular-element( padding, 2rem );
  @include modular-element( margin-bottom, 2rem );
  border-radius: 0.25rem;

  strong{
    @include modular( 1.5rem );
    display: inline-block;
    vertical-align: middle;
    color: $type;
  }

  h1{
    @include modular( 4rem, $major-second );
    line-height: 1;
    a{
      color: $type;
      text-decoration: none;
    }
  }

  .note{
    @include modular( 1rem );
    color: $brand-colour;
    background-color: white;
    &:after{ border-left-color: white; }
  }
}


.featured {

  @at-root #{&}__list {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    @at-root #{&}--item {
      flex: 1 0 300px;
      @include modular-element( margin, 0.5rem );
      @include modular-element( padding, 1rem );
      border-bottom: 1px solid fade-out( black, 0.95 );
      position: relative;

      .note {
        font-size: 0.75rem;
        top: 1.35rem;
        position: absolute;
      }

      .note-nudge {
        padding-left: 5rem;
      }

      strong{
        @include modular( 1rem );
      }

      h2{
        @include modular( 1.5rem );
        line-height: 1.2;
        font-weight: 400;
      }

      &.highlight {
        border-radius: 0.25rem;

        strong{
          font-style: italic;
        }

        a{
          color: $brand-alt;
        }

        .note{
          background-color: $brand-alt;
          color: white;
          &:after{ border-left-color: $brand-alt }
        }
      }

    }
  }
}


/*
 * Variables
 */
$element:     '.featured__list--item';
$length:      1s;
$stage:       0.05s;
$movement:    1rem;
$transition:  cubic-bezier(0.175,0.885,0.32,1.275);

/*
 * Lists have some movement
 */

#{$element} {
  transform:  translateX(#{$movement});
  opacity: 0;
  // When menu is open, animate!
  animation: delay $length $transition forwards;
}
/*
 * For every list in succession, delay incrementally
 */
@for $i from 1 through 50 {
  $delay: $stage * $i;
  #{$element}:nth-of-type(#{$i}){
    animation-delay: $delay;
  }
}


// Animate
@keyframes delay{
  from {
    transform:  translateX(#{$movement});
    opacity: 0;
  }
  to {
    transform:  translateX(0);
    opacity: 1;
  }
}









.post-content{
  @include wider-than(tablet){
    max-width: 60%;
  }
}

input{
  &[type="text"],
  &[type="email"]{
    font-size: 1.5rem;
    padding: 0.25rem 0.75rem;
    display: block;
    margin-bottom: 0.5rem;
  }
}

button{
  color: white;
  background-color: $brand-colour;
  border: 0;
  @include modular( 1.5rem );
  display: block;
  padding: 0.25rem 0.75rem;
}

.single{
  margin-top: 1.5rem;
}