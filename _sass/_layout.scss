
/**
 * Wrapper
 */
 .wrap, .w, .wrapper {
  max-width: 90%;
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  @extend %clearfix;

  @include wider-than(tablet){	max-width: $phablet; }
  @include wider-than(desktop) {	max-width: $tablet; }
  @include wider-than(cinema) {	max-width: $desktop; }
}

.ma{
	margin-right: auto;
	margin-left: auto;
}


/**
 * Grid.
 * @param  int      $i          Amount of columns needed
 * @param  int      $max:       12            Total amount of columns in grid
 * @param  gutter   $guttering: 1.875rem      Space between columns with rem value
 * @param  boolean  $last:      false         Determines final gutter
 * @return width
 *
 * @usage  @include span(6, 12);              Width with gutter
 * @usage  @include span(4, 12, 1rem);        Width with custom gutter
 * @usage  @include span(6, 12, $last:true);  Last element
 */
$gutter: 1.875rem;
@mixin span( $i, $max: 12, $guttering: $gutter, $last: null){
  // Width without REM support
  $percentage: $i * 100% / $max;
  width: $percentage - 2%;
  // Width for modern browsers
  $percentage: $percentage - 0.1111%;
  $num: $max / $i - 1;
  $margin-right: ($num * $guttering / ($num +1));
  width: calc(#{$percentage} - #{$margin-right});
  // Grid is based on floats
  float: left;
  // If last item
  @if $last == null {
    // Gutter widthout REM support
    margin-right: 2%;
    // Gutter for modern browsers
    margin-right: calc(#{$guttering});
  }
}